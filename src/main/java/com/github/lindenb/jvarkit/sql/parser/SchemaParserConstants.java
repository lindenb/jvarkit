/* Generated By:JavaCC: Do not edit this line. SchemaParserConstants.java */
package com.github.lindenb.jvarkit.sql.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface SchemaParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int DROP = 5;
  /** RegularExpression Id. */
  int CREATE = 6;
  /** RegularExpression Id. */
  int USE = 7;
  /** RegularExpression Id. */
  int TABLE = 8;
  /** RegularExpression Id. */
  int TEMPORARY = 9;
  /** RegularExpression Id. */
  int DATABASE = 10;
  /** RegularExpression Id. */
  int IF = 11;
  /** RegularExpression Id. */
  int NOT = 12;
  /** RegularExpression Id. */
  int NULL = 13;
  /** RegularExpression Id. */
  int EXISTS = 14;
  /** RegularExpression Id. */
  int SET = 15;
  /** RegularExpression Id. */
  int ENUM = 16;
  /** RegularExpression Id. */
  int KEY = 17;
  /** RegularExpression Id. */
  int VARCHAR = 18;
  /** RegularExpression Id. */
  int CHAR = 19;
  /** RegularExpression Id. */
  int DEFAULTVALUE = 20;
  /** RegularExpression Id. */
  int LONGBLOB = 21;
  /** RegularExpression Id. */
  int BLOB = 22;
  /** RegularExpression Id. */
  int INTEGER = 23;
  /** RegularExpression Id. */
  int SMALLINT = 24;
  /** RegularExpression Id. */
  int DATETIME = 25;
  /** RegularExpression Id. */
  int DOUBLE = 26;
  /** RegularExpression Id. */
  int FLOAT = 27;
  /** RegularExpression Id. */
  int MEDIUMBLOG = 28;
  /** RegularExpression Id. */
  int TINYINT = 29;
  /** RegularExpression Id. */
  int TEXT = 30;
  /** RegularExpression Id. */
  int UNSIGNED = 31;
  /** RegularExpression Id. */
  int SIGNED = 32;
  /** RegularExpression Id. */
  int UNIQUE = 33;
  /** RegularExpression Id. */
  int PRIMARY = 34;
  /** RegularExpression Id. */
  int CHARACTER = 35;
  /** RegularExpression Id. */
  int COLLATE = 36;
  /** RegularExpression Id. */
  int CHARSET = 37;
  /** RegularExpression Id. */
  int LETTER = 38;
  /** RegularExpression Id. */
  int DIGIT = 39;
  /** RegularExpression Id. */
  int INT = 40;
  /** RegularExpression Id. */
  int IDENTIFIER1 = 41;
  /** RegularExpression Id. */
  int IDENTIFIER2 = 42;
  /** RegularExpression Id. */
  int VARIABLE = 43;
  /** RegularExpression Id. */
  int EQ = 44;
  /** RegularExpression Id. */
  int SEMICOLON = 45;
  /** RegularExpression Id. */
  int LPAR = 46;
  /** RegularExpression Id. */
  int RPAR = 47;
  /** RegularExpression Id. */
  int COMMA = 48;
  /** RegularExpression Id. */
  int ESCAPE_CHAR = 49;
  /** RegularExpression Id. */
  int SIMPLE_QUOTE_LITERAL = 50;
  /** RegularExpression Id. */
  int DOUBLE_QUOTE_LITERAL = 51;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\n\"",
    "<token of kind 3>",
    "<token of kind 4>",
    "\"DROP\"",
    "\"CREATE\"",
    "\"USE\"",
    "\"TABLE\"",
    "\"TEMPORARY\"",
    "\"DATABASE\"",
    "\"IF\"",
    "\"NOT\"",
    "\"NULL\"",
    "\"EXISTS\"",
    "<SET>",
    "<ENUM>",
    "\"KEY\"",
    "\"varchar\"",
    "\"char\"",
    "<DEFAULTVALUE>",
    "\"longblob\"",
    "\"blob\"",
    "\"int\"",
    "\"smallint\"",
    "\"datetime\"",
    "\"double\"",
    "\"float\"",
    "\"mediumblob\"",
    "\"tinyint\"",
    "<TEXT>",
    "\"unsigned\"",
    "\"signed\"",
    "\"UNIQUE\"",
    "\"PRIMARY\"",
    "\"character\"",
    "\"collate\"",
    "\"CHARSET\"",
    "<LETTER>",
    "<DIGIT>",
    "<INT>",
    "<IDENTIFIER1>",
    "<IDENTIFIER2>",
    "<VARIABLE>",
    "\"=\"",
    "\";\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "<ESCAPE_CHAR>",
    "<SIMPLE_QUOTE_LITERAL>",
    "<DOUBLE_QUOTE_LITERAL>",
  };

}
